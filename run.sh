# –∑–∞–ø—É—Å–∫–∞–µ—Ç minikube, minio, argo, registry –∏ –¥–∞—à–±–æ—Ä–¥—ã –¥–ª—è –Ω–∏—Ö

check_status() {
  if [ $? -eq 0 ]; then
    echo "‚úÖ $1 –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ $1!"
    exit 1
  fi
}

minikube start
kubectl create namespace minio
kubectl apply -f kuber/minio-deployment.yaml
check_status "minio –ø–æ–¥–Ω—è—Ç"

kubectl create secret generic minio-credentials \
  --from-literal=accesskey=minioadmin \
  --from-literal=secretkey=minioadmin \
  --from-literal=endpoint=

# kubectl wait --for=condition=available deployment/minio -n minio --timeout=120s

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Argo
helm repo add argo https://argoproj.github.io/argo-helm

# –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
helm repo update

helm install argo-workflows argo/argo-workflows \
  --namespace argo \
  --create-namespace \
  --set "server.extraArgs={--auth-mode=server}"

kubectl apply -f kuber/ffmpeg-templates.yaml -n argo

kubectl apply -f kuber/roles.yaml

kubectl rollout restart deployment argo-workflows-server -n argo
kubectl rollout restart deployment argo-workflows-workflow-controller -n argo

minikube addons enable registry



# nohup kubectl -n argo port-forward svc/argo-workflows-server 2746:2746 &
# check_status "Argo Workflows Server (port 2746)"


# nohup kubectl port-forward -n minio svc/minio 9000:9000 9001:9001  > /dev/null 2>&1 &
# check_status "MinIO (ports 9000, 9001)"

# nohup kubectl port-forward -n kube-system svc/registry 5000:80 &
# check_status "Registry (port 5000)"

# nohup minikube dashboard &
# check_status "Minikube Dashboard"

# sleep 5
# mc alias set kubemc http://localhost:9000 minioadmin minioadmin
# mc mb kubemc/videos

echo "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–µ. üöÄ"