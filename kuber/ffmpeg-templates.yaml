apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: video-processing-templates
  namespace: argo
spec:
  templates:
  # Шаблоны для параллельной обработки
    - name: process-4k
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      parallelism: 2
      steps:
        - - name: process-high
            template: process-4k-high
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
          - name: process-low
            template: process-480p-low
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
    - name: process-2k
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      parallelism: 2
      steps:
        - - name: process-high
            template: process-2k-high
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
          - name: process-low
            template: process-480p-low
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
    - name: process-1080p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      parallelism: 3
      steps:
        - - name: process-high 
            template: process-1080p-high
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
          - name: process-low  
            template: process-360p-low
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
    - name: process-720p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      parallelism: 2 
      steps:
        - - name: process-high
            template: process-720p-high
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
          - name: process-low-res
            template: process-360p-low
            arguments:
              parameters:
                - name: video_path
                  value: "{{inputs.parameters.video_path}}"
                - name: uuid
                  value: "{{inputs.parameters.uuid}}"
    
    - name: process-4k-high
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "12"
            memory: "16Gi"
          requests:
            cpu: "10"
            memory: "14Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            mc cp "$minio_path" "$local_path" || exit 1
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex "
                [0:v]split=4[v1][v2][v3][v4];
                [v1]scale=-2:2160[v1out];
                [v2]scale=-2:1440[v2out];
                [v3]scale=-2:1080[v3out];
                [v4]scale=-2:720[v4out];
                [0:a]asplit=4[a1][a2][a3][a4]
              " \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 10000k -maxrate:v:0 10000k -minrate:v:0 10000k -bufsize:v:0 20000k \
                -preset slower -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 6000k -maxrate:v:1 6000k -minrate:v:1 6000k -bufsize:v:1 12000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 4000k -maxrate:v:2 4000k -minrate:v:2 4000k -bufsize:v:2 8000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v4out]" -c:v:3 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:3 2500k -maxrate:v:3 2500k -minrate:v:3 2500k -bufsize:v:3 5000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[a1]" -c:a:0 aac -b:a:0 256k \
              -map "[a2]" -c:a:1 aac -b:a:1 192k \
              -map "[a3]" -c:a:2 aac -b:a:2 128k \
              -map "[a4]" -c:a:3 aac -b:a:3 96k \
              -f hls \
              -var_stream_map "v:0,a:0,name:4k v:1,a:1,name:2k v:2,a:2,name:1080p v:3,a:3,name:720p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive "/tmp/output/{{inputs.parameters.uuid}}/" "kubemc/video-files/{{inputs.parameters.uuid}}/"
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"
    
    - name: process-2k-high
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "8"
            memory: "12Gi"
          requests:
            cpu: "7"
            memory: "10Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            mc cp "$minio_path" "$local_path" || exit 1
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex "
                [0:v]split=3[v1][v2][v3];
                [v1]scale=-2:1440[v1out];
                [v2]scale=-2:1080[v2out];
                [v3]scale=-2:720[v3out];
                [0:a]asplit=3[a1][a2][a3]
              " \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 6000k -maxrate:v:0 6000k -minrate:v:0 6000k -bufsize:v:0 12000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 4000k -maxrate:v:1 4000k -minrate:v:1 4000k -bufsize:v:1 8000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 2500k -maxrate:v:2 2500k -minrate:v:2 2500k -bufsize:v:2 5000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[a1]" -c:a:0 aac -b:a:0 192k \
              -map "[a2]" -c:a:1 aac -b:a:1 128k \
              -map "[a3]" -c:a:2 aac -b:a:2 96k \
              -f hls \
              -var_stream_map "v:0,a:0,name:2k v:1,a:1,name:1080p v:2,a:2,name:720p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive "/tmp/output/{{inputs.parameters.uuid}}/" "kubemc/video-files/{{inputs.parameters.uuid}}/"
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"
      
    - name: process-1080p-high
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "6"
            memory: "8Gi"
          requests:
            cpu: "5"
            memory: "7Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            mc cp "$minio_path" "$local_path" || exit 1
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex "
                [0:v]split=3[v1][v2][v3];
                [v1]scale=-2:1080[v1out];
                [v2]scale=-2:720[v2out];
                [v3]scale=-2:480[v3out];
                [0:a]asplit=3[a1][a2][a3]
              " \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 4000k -maxrate:v:0 4000k -minrate:v:0 4000k -bufsize:v:0 8000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 2500k -maxrate:v:1 2500k -minrate:v:1 2500k -bufsize:v:1 5000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 1500k -maxrate:v:2 1500k -minrate:v:2 1500k -bufsize:v:2 3000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[a1]" -c:a:0 aac -b:a:0 192k \
              -map "[a2]" -c:a:1 aac -b:a:1 128k \
              -map "[a3]" -c:a:2 aac -b:a:2 96k \
              -f hls \
              -var_stream_map "v:0,a:0,name:1080p v:1,a:1,name:720p v:2,a:2,name:480p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive "/tmp/output/{{inputs.parameters.uuid}}/" "kubemc/video-files/{{inputs.parameters.uuid}}/"
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"
    
    - name: process-720p-high
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "6"
            memory: "7Gi"
          requests:
            cpu: "5"
            memory: "6Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            mc cp "$minio_path" "$local_path" || exit 1
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex "
                [0:v]split=2[v1][v2];
                [v1]scale=-2:720[v1out];
                [v2]scale=-2:480[v2out];
                [0:a]asplit=2[a1][a2]
              " \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 2500k -maxrate:v:0 2500k -minrate:v:0 2500k -bufsize:v:0 5000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 1500k -maxrate:v:1 1500k -minrate:v:1 1500k -bufsize:v:1 3000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[a1]" -c:a:0 aac -b:a:0 128k \
              -map "[a2]" -c:a:1 aac -b:a:1 96k \
              -f hls \
              -var_stream_map "v:0,a:0,name:720p v:1,a:1,name:480p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    # Общий шаблон для низких разрешений
    - name: process-480p-low
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "5"
            memory: "4Gi"
          requests:
            cpu: "4"
            memory: "3Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex \
                "[0:v]split=4[v1][v2][v3][v4]; \
                [v1]scale=-2:480[v1out]; \
                [v2]scale=-2:360[v2out]; \
                [v3]scale=-2:240[v3out]; \
                [v4]scale=-2:144[v4out]" \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 1500k -maxrate:v:0 1500k -minrate:v:0 1500k -bufsize:v:0 3000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 800k -maxrate:v:1 800k -minrate:v:1 800k -bufsize:v:1 1600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 500k -maxrate:v:2 500k -minrate:v:2 500k -bufsize:v:2 1000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v4out]" -c:v:3 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:3 300k -maxrate:v:3 300k -minrate:v:3 300k -bufsize:v:3 600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map a:0 -c:a:0 aac -b:a:0 96k -ac 2 \
              -map a:0 -c:a:1 aac -b:a:1 96k -ac 2 \
              -map a:0 -c:a:2 aac -b:a:2 64k -ac 2 \
              -map a:0 -c:a:3 aac -b:a:3 64k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -var_stream_map "v:0,a:0,name:480p v:1,a:1,name:360p v:2,a:2,name:240p v:3,a:3,name:144p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    - name: process-360p-low
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      metadata:
        labels:
          workflow-id: "{{workflow.uid}}"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: workflow-id
                      operator: In
                      values: ["{{workflow.uid}}"]
                topologyKey: "kubernetes.io/hostname"
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "3"
            memory: "6Gi"
          requests:
            cpu: "2"
            memory: "5Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
                    # Копируем файл с оригинальным именем
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            # Создание директории для выходных файлов
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex \
                "[0:v]split=3[v1][v2][v3]; \
                [v1]scale=-2:360[v1out]; \
                [v2]scale=-2:240[v2out]; \
                [v3]scale=-2:144[v3out]" \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 1000k -maxrate:v:0 1000k -minrate:v:0 1000k -bufsize:v:0 2000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 500k -maxrate:v:1 500k -minrate:v:1 500k -bufsize:v:1 1000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 300k -maxrate:v:2 300k -minrate:v:2 300k -bufsize:v:2 600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map a:0 -c:a:0 aac -b:a:0 64k -ac 2 \
              -map a:0 -c:a:1 aac -b:a:1 64k -ac 2 \
              -map a:0 -c:a:2 aac -b:a:2 64k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -var_stream_map "v:0,a:0,name:360p v:1,a:1,name:240p v:2,a:2,name:144p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"
            
            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    #Signle templates
    - name: process-480p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "4"
            memory: "4Gi"
          requests:
            cpu: "3"
            memory: "3Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex \
                "[0:v]split=4[v1][v2][v3][v4]; \
                [v1]scale=-2:480[v1out]; \
                [v2]scale=-2:360[v2out]; \
                [v3]scale=-2:240[v3out]; \
                [v4]scale=-2:144[v4out]" \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 1500k -maxrate:v:0 1500k -minrate:v:0 1500k -bufsize:v:0 3000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 800k -maxrate:v:1 800k -minrate:v:1 800k -bufsize:v:1 1600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 500k -maxrate:v:2 500k -minrate:v:2 500k -bufsize:v:2 1000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v4out]" -c:v:3 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:3 300k -maxrate:v:3 300k -minrate:v:3 300k -bufsize:v:3 600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map a:0 -c:a:0 aac -b:a:0 96k -ac 2 \
              -map a:0 -c:a:1 aac -b:a:1 96k -ac 2 \
              -map a:0 -c:a:2 aac -b:a:2 64k -ac 2 \
              -map a:0 -c:a:3 aac -b:a:3 64k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -var_stream_map "v:0,a:0,name:480p v:1,a:1,name:360p v:2,a:2,name:240p v:3,a:3,name:144p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    - name: process-360p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "4"
            memory: "5Gi"
          requests:
            cpu: "3"
            memory: "4Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
                    # Копируем файл с оригинальным именем
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            # Создание директории для выходных файлов
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i "$local_path" \
              -filter_complex \
                "[0:v]split=3[v1][v2][v3]; \
                [v1]scale=-2:360[v1out]; \
                [v2]scale=-2:240[v2out]; \
                [v3]scale=-2:144[v3out]" \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 1000k -maxrate:v:0 1000k -minrate:v:0 1000k -bufsize:v:0 2000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 500k -maxrate:v:1 500k -minrate:v:1 500k -bufsize:v:1 1000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v3out]" -c:v:2 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:2 300k -maxrate:v:2 300k -minrate:v:2 300k -bufsize:v:2 600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map a:0 -c:a:0 aac -b:a:0 64k -ac 2 \
              -map a:0 -c:a:1 aac -b:a:1 64k -ac 2 \
              -map a:0 -c:a:2 aac -b:a:2 64k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -var_stream_map "v:0,a:0,name:360p v:1,a:1,name:240p v:2,a:2,name:144p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"
            
            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    - name: process-240p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "4"
            memory: "4Gi"
          requests:
            cpu: "3"
            memory: "3Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
                    # Копируем файл с оригинальным именем
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            # Создание директории для выходных файлов
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

                    # Обработка только 240p и 144p
            ffmpeg -i "$local_path" \
              -filter_complex \
                "[0:v]split=2[v1][v2]; \
                [v1]scale=-2:240[v1out]; \
                [v2]scale=-2:144[v2out]" \
              -map "[v1out]" -c:v:0 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:0 500k -maxrate:v:0 500k -minrate:v:0 500k -bufsize:v:0 1000k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map "[v2out]" -c:v:1 libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
                -b:v:1 300k -maxrate:v:1 300k -minrate:v:1 300k -bufsize:v:1 600k \
                -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -map a:0 -c:a:0 aac -b:a:0 64k -ac 2 \
              -map a:0 -c:a:1 aac -b:a:1 64k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -var_stream_map "v:0,a:0,name:240p v:1,a:1,name:144p" \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/%v-{{inputs.parameters.uuid}}.m3u8"

            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"

    - name: process-144p
      inputs:
        parameters:
          - name: video_path
          - name: uuid
      container:
        image: danilukumnik/ffmpeg-minio:alpine-1.14
        resources:
          limits:
            cpu: "3"
            memory: "3Gi"
          requests:
            cpu: "2"
            memory: "2Gi"
        command: ["sh", "-c"]
        args:
          - |
            set -x
            mc alias set kubemc http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin --api S3v4
            
                    # Копируем файл с оригинальным именем
            minio_path="kubemc/videos/{{inputs.parameters.video_path}}"
            local_path="/tmp/$(basename "{{inputs.parameters.video_path}}")"
            
            echo "Copying $minio_path to $local_path"
            mc cp "$minio_path" "$local_path" || { echo "Failed to copy file"; exit 1; }
            
            # Создание директории для выходных файлов
            mkdir -p /tmp/output/{{inputs.parameters.uuid}}

            ffmpeg -i $local_path \
              -vf "scale=-2:144" \
              -c:v libx264 -x264-params "nal-hrd=cbr:force-cfr=1" \
              -b:v 200k -maxrate 200k -minrate 200k -bufsize 400k \
              -preset slow -g 48 -sc_threshold 0 -keyint_min 48 \
              -c:a aac -b:a 48k -ac 2 \
              -f hls \
              -hls_time 5 \
              -hls_list_size 0 \
              -hls_playlist_type vod \
              -hls_segment_type mpegts \
              -hls_flags independent_segments \
              -hls_segment_filename "/tmp/output/{{inputs.parameters.uuid}}/144p-{{inputs.parameters.uuid}}%05d.ts" \
              "/tmp/output/{{inputs.parameters.uuid}}/144p-{{inputs.parameters.uuid}}.m3u8"
            
            mc cp --recursive /tmp/output/{{inputs.parameters.uuid}}/ kubemc/video-files/{{inputs.parameters.uuid}}/
            rm -f "$local_path"
            rm -rf "/tmp/output/{{inputs.parameters.uuid}}"