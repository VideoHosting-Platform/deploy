apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: video-processing-
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: video_path #?
      - name: uuid
      - name: preset
      - name: skip_processing
        value: "false"  # По умолчанию выполняем все шаги
  volumes:
    - name: workspace
      emptyDir: {}
  
  templates:
    - name: main
      steps:
        - - name: process
            templateRef:
              name: video-processing-templates
              template: "process-{{workflow.parameters.preset}}"
            when: "{{workflow.parameters.skip_processing}} == false"
            arguments:  # ← Явно передаём параметры в шаблон
              parameters:
                - name: video_path  # Имя параметра в шаблоне
                  value: "{{workflow.parameters.video_path}}"  # Берём из Workflow
                - name: uuid       # Если нужно
                  value: "{{workflow.parameters.uuid}}"
        - - name: generate-master
            template: generate-master
            arguments:
              parameters:
                - name: uuid
                  value: "{{workflow.parameters.uuid}}"
        # - - name: notify
        #     template: notify-backend
      
    - name: generate-master
      inputs:
        parameters:
          - name: uuid
      container:
        image: minio/mc:latest
        command: ["sh", "-c"]
        args:
          - |
            # Настройка MinIO клиента
            mc alias set minio http://minio.minio.svc.cluster.local:9000 minioadmin minioadmin
            
            # Генерация мастер-плейлиста
            echo "#EXTM3U" > /tmp/master.m3u8
            echo "#EXT-X-VERSION:3" >> /tmp/master.m3u8
            
            # Получаем только .m3u8 файлы и обрабатываем их
            mc find minio/video-files/{{inputs.parameters.uuid}}/ --name "*.m3u8" --print0 | while IFS= read -r -d '' file; do
              filename=$(basename "$file")
              
              # Определяем качество по имени файла
              case "$filename" in
                *4K*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=15000000,RESOLUTION=3840x2160" >> /tmp/master.m3u8
                  ;;
                *2K*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=8000000,RESOLUTION=2560x1440" >> /tmp/master.m3u8
                  ;;
                *1080p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=5000000,RESOLUTION=1920x1080" >> /tmp/master.m3u8
                  ;;
                *720p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=2500000,RESOLUTION=1280x720" >> /tmp/master.m3u8
                  ;;
                *480p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=1500000,RESOLUTION=854x480" >> /tmp/master.m3u8
                  ;;
                *360p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=1000000,RESOLUTION=640x360" >> /tmp/master.m3u8
                  ;;
                *240p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=500000,RESOLUTION=426x240" >> /tmp/master.m3u8
                  ;;
                *144p*)
                  echo "#EXT-X-STREAM-INF:BANDWIDTH=300000,RESOLUTION=256x144" >> /tmp/master.m3u8
                  ;;
                *)
                  continue # Пропускаем файлы без указания качества
                  ;;
              esac
              
              echo "$filename" >> /tmp/master.m3u8
            done
            
            # Загружаем мастер-плейлист в MinIO
            mc cp /tmp/master.m3u8 minio/video-files/{{inputs.parameters.uuid}}/master.m3u8
    
    - name: notify-backend
      container:
        image: alpine/curl
        command: ["curl", "-X", "POST", "http://fastapi-service.default.svc.cluster.local:8000/post-processing"]